【0】复习
   了解历史：
      早前阿帕网特点：没有纠错功能、不能互联不同主机和不同操作系统
	  TCP/IP ：TCP   IP
	  
	广域网：链接外网
	局域网：内网通信 
	
	ip：标识主机
	   ip=网络号+主机号
	   A: 0  1byte网络  3byte主机
	   B：10  2byte网络  2byte主机
	   C：110 3byte网络  1byte主机
	   
	port端口：标识进程
	 
	1-1023
	1024-49151
	
	OSI    TCP/IP	

	socket：
	
	套接字：
	   流式-TCP、数据报-UDP、原始
	
    大小端：
     pc-小端
     网络字节序：大端	 
	
	TCP通信流程：
	   服务器：
	      1.创建套接字 socket
	int sockfd=socket(通信方式,套接字类型,0-自动匹配底层);
		  2.绑定  bind
		  ipv4-struct sockaddr_in saddr;
		     saddr.sin_family=AF_INET;
			 saddr.sin_port=htons(端口);
			 saddr.sin_addr.s_addr=inet_addr("ip");
		  bind(sockfd,(struct sockaddr *)&saddr,sizeof(saddr));
		  3.监听  listen
		  listen(sockfd,5);
		  4.阻塞等待客户端链接  accept
		  int acceptfd=accept(sockfd,NULL,NULL);
		  5.接受消息   recv/send
		   recv(acceptfd,buf,sizeof(buf),0-阻塞);  
		  6.关闭套接字  close
	  客户端：
	     1.创建套接字
		   填充服务的结构体
		 2.请求链接服务器 connect
		 connect(sockfd,(struct sockaddr *)&saddr,sizeof(saddr));
		 3.发送接收消息  send
		  send(sockfd,buf,sizeof(buf),0-阻塞);  
		 4.关闭套接字
		 
ftp项目：		 
	list - 查看服务器端目录有什么文件。
     服务：
        1.打开目录   opendir
		2.循环读目录-文件   readdir
		3.判断是否是普通文件    stat
        4.是发送		send
		
		5.发送结束标志。
		
	客户端：发送list请求
            循环接收服务器发送文件名，接收到结束标志循环退出
		 
		 
	put ：客户端将普通文件上传(名字+内容)
     服务器：接收指令请求   
       1.打开新建上传文件
       2.循环接收文件内容写到新建文件中	   
		 
	客户端：发送put请求	+文件名
	   1.打开上传文件
       2.循环读文件内容发送给服务器。
	   3.发送结束标志。
		 
	get：put反过来
    quit：	
		 
	
总结：
    TCP - 循环服务器：循环响应一个客户端的请求
    UDP - 直接实现并发服务器：
           一个服务器响应多个客户端请求。

    学习-TCP		   
		实现并发服务器。
     IO多路复用（select poll epoll）、多进程、多线程。 
	 
	 引入linuxIO模型学习：
	   1.阻塞IO：最常用、效率低、只能处理一路IO、不耗费cpu资源
	   2.非阻塞IO：不常用、能处理多路IO、耗费ＣＰＵ资源。
	   3.信号驱动IO：异步IO，需要底层驱动支持。
	   ４.IO多路复用：实现多路IO*****
		 